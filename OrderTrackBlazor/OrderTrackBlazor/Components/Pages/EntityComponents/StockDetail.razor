@inherits StockDetailComponent
<h1>@Name 库存</h1>
<Table TItem="StockListDTO" Items="@StockLists">
  <TableColumns>
    <TableColumn @bind-Field="@context.IsPurchase" Text="(出/入)库">
      <Template Context="value">
        @switch (value.Value)
        {
          case OrderTrackBlazor.Enums.EnumInOutStatus.Input:
            <span>入库</span>
            break;
          case OrderTrackBlazor.Enums.EnumInOutStatus.OutPut:
            <span>出库</span>
            break;
          case OrderTrackBlazor.Enums.EnumInOutStatus.VirtualInput:
            <span>虚入</span>
            break;
          case OrderTrackBlazor.Enums.EnumInOutStatus.VirtualOutPut:
            <span>虚出</span>
            break;
        }


      </Template>
    </TableColumn>
    <TableColumn @bind-Field="@context.Date">
      <Template Context="value">
        <span>@value.Value?.ToString("dd/MM/yyyy")</span>
      </Template>
    </TableColumn>
    @* <TableColumn @bind-Field="@context.Name" Text="产品"></TableColumn> *@
    <TableColumn @bind-Field="@context.RowId" Text="来源">
      <Template Context="value">
        @{
          var row = StockLists.FirstOrDefault(b => b.RowId == value.Value);
          if (row.IsPurchase == OrderTrackBlazor.Enums.EnumInOutStatus.Input)
          {
            <span>@row.Shop</span>
          }
          else
          {
            <span>@row.OrderShortNote</span>
          }
        }
      </Template>
    </TableColumn>
    <TableColumn @bind-Field="@context.Number" Text="数量"></TableColumn>
  </TableColumns>
</Table>